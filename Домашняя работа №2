<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Домашняя работа№2</title>
<body>
    <script>
    'use strict'

//задание 1
//пример 1
'use strict'
let a = 1, b = 1, c, d;
c = ++a;
alert(c); // ответ: 2
/**
 * объявляются переменные на весь блок (в данном случае на примеры с 1 по 4)
 * двум перемнным значение присвоили, две другие просто обозначили.
 * затем переменной с присвоили значение ++а и попросили вывести его через alert
 * ответ 2 получается потому, переменная "а" имеет перфиксную форму инкремента 
 * поэтому "а" принимает 1 которая потом суммируется со значением присвоеннымм ранее.
 */
//пример 2
d = b++;
alert(d); //ответ: 1
/**
 * переменной d присвоено значение b, 
 * постфиксная форма инкремента сначала увеличит значение b на 1
 * но потом вернет старое значение, то-есть 1.
 * */
//пример 3
c = 2 + ++a;
alert(c); //ответ: 5
/**
 * вот тут не понимаю почему так выходит.
 * переменной "с" присваивается значение выражения
 * к 2 прибавляется переменная ++а
 * так как это префиксная форма инкремента, то оно увеличивает значение а на 1.
 * переменной а было присвоено значение 1, инкремент увеличивает его еще на 1 и получаем 2.
 * в итоге с = 2+2 (4).
 * откуда бертся 5 я не понимаю 
 */
//пример 4
d = 2 + b++;
alert(d); //ответ: 4
/**
 * переменная b имеет постфиксную форму инкремента, ранее ей было присвоено значение 1, инкремент увеличивает его еще на 1, получаем b = 2
 * d = 2+2 (4)
 */


//задание 2
/*
Чему будут равны переменные x и a в примере ниже? 
Написать почему так произошло (описать последовательность действий).
*/
let a = 2;
let x = 1 + (a *= 2);
alert(x);
/**
 * вводим две переменные "а" и "х"
 * переменной "а" присваиваем значение 2
 * переменной "х" присвоится результат выражения
 * действие в скобках *= сокращенная форма операции умножения, выглядит так а = а * 2. То-есть а = 2 * 2, получаем а = 4.
 * 1 + 4 = 5, значение 5 присвоится переменной х
 */

//задание 3
/*Объявить две переменные a и b и задать им целочисленные произвольные начальные 
значения.
Затем написать скрипт, который работает по следующему принципу:
- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
- если а и b отрицательные, вывести их произведение;
- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
4. */
let a = +prompt('');
    b = +prompt('');
    if (a >= 0 && b >= 0){
        alert(a - b);
        break;
    } else if (a < 0 && b < 0){
        alert(a*b);
        break;
    }else (a < 0 && b >= 0 || b < 0 && a >= 0){
        alert(a+b);
    }
/**
 * вводим две переменные "а" и "b"
 * за счет оператора и унарного плюса обозначаем их как цифры
 * задаем условие, 'a' и 'b' - больше или равны нулю.
 * если 'a' и 'b' меньше нуля, то выводим их произведение.
 * третье условие - либо 'а' меньше нуля, 'b' больше или наоборот, тогда выводим их сумму.
 * пользователь вводит значения и программа определяет какое условие применить, 
сравнивая значения по заданным условиям.
 */
//задание 4
/**
 Реализовать основные 4 арифметические операции 
 (+, -, /, *) в виде функций с двумя параметрами. 
 Т.е. например, функция для сложения должна 
принимать два числа, складывать их и возвращать результат.
Обязательно использовать оператор return.
 */
/**
 * введем две переменные, с которыми будем проводить манипуляции
 * объявим функции и их значения, в теле указывает что необходимо сделать и как воспроизвести.
 * с операцией деления сложнее - хорошо будет, если "а" будет больше "b", для этого прописываем условие в теле функции, а потом укажем что вернуть.
 */
let a = +prompt('');
    b = +prompt('');
function numSum (a, b){
    return (a+b);
}
function numDel (a, b){
    return(a-b);
}
function numMax (a, b){
    return(a*b);
}
function numMin (a, b){
    if (a >= b && a != NaN && b != NaN){
        return(a/b);
    }else (a < b)
        alert('Ведите число');
}

//задание 5
/**
 *Реализовать функцию с тремя параметрами: 
 function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием 
операции. В зависимости от переданного значения операции 
(использовать switch) выполнить одну из арифметических операций
(использовать функции из задания 4) и вернуть полученное значение.
*/
/**
 * объявим переменные arg1, arg2, operation
 * присвоим переменной operation значение (four)
 * объявим функции c действиями над переменными
 * задаем перебор аргумента по заданному значению через switch
 * будет происходить перебор значений и возврат функции
 * 
 */
let arg1 = +prompt('');
    arg2 = +prompt('');
    operation = four;
function numSum (arg1, arg2){
    return (arg1+arg2);
}
function numDel (arg1, arg2){
    return(arg1-arg2);
}
function numMax (arg1, arg2){
    return(arg1*arg2);
}
function numMin (arg1, arg2){
    if (arg1 >= arg2 && arg1 != NaN && arg2 != NaN){
        return(arg1/arg2);
    }else (arg1 < arg2)
        alert('Ведите число');
}
function mathOperation(arg1, arg2, operation){
    switch (operation){
        case'one':
        return(numSum);
        break;
        case'two':
        return(numDel);
        break;
        case'three':
        return(numMax);
        break;
        case'four':
        return(numMin);
    }
    return (mathOperation);
}
//задание 6
/**
 *Программа должна спросить у пользователя число, 
 это будет количество денег, которое он хочет 
положить на счет в банке. 
Затем программа должна выдать примерно такое сообщение:
"Ваша сумма в 101 рубль успешно зачислена." - в случае 
если пользователь ввел 101.
"Ваша сумма в 10020 рублей успешно зачислена." - в случае 
если пользователь ввел 10020.
"Ваша сумма в 120104 рубля успешно зачислена." - в случае 
если пользователь ввел 120104.
То есть ваша задача выводить слово «рубль» в правильном падеже, 
в зависимости от введенного 
числа.
*/
/**
 * объявляем переменную sumMoney
 * Далее, по идее, нам нужно произвести операцию сравнения, если сумма 
 * пользователя меньше или равна 101, то мы выводим положительный ответ. Если сумма пользователя маньше,101, то ему нужно предложить ввести большую. И это получается цикл. Он будет повторяться, пока не будет достигнуто желаемое.
 * То-есть, пока сумма пользователя не сравняется со 101.
 * Далее необходимо, описать второе условие, если сумма платежа больше 101 или равно 10020, то выводим второе сообщение и это условие заключаем снова в цикл. 
 * Потому что он будет вводить много раз или же, дать ему три попытки на введение.
 */
let sumMoney = +prompt('Введите сумму денег, которую Вы хотите внести на счет');
for (let i = 0; i >= 101; i++){ //начала шага от 0, количество шагов столько, пока i не приравняется 101. Внутри цикла описываем условие.
    if (i = sumMoney){ // пошло сравнение, если равны, то заканчиваем, елси нет, то шаг прибавляется на единицу и так до упора...
        alert('Ваша сумма в' + i + 'рубль успешно зачислена');
        break;
    }else 
    alert('Сумма слишком мало. Внесите больше.');
}
return(sumMoney);
for (let i = 0; i <= 3; i++){
    if (i > 101 || i <= 10020){
        alert('Ваша сумма в' + i + 'рублей успешно зачислена.');
    }else
    alert('Сумма слишком мала. Внесите больше.');
}
    </script>
</body>
</html>